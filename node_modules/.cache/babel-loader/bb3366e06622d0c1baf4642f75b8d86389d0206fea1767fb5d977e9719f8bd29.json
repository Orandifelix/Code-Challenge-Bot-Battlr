{"ast":null,"code":"var _jsxFileName = \"/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotCard.js\";\n// import React from \"react\";\n\n// const botTypeClasses = {\n//   Assault: \"icon military\",\n//   Defender: \"icon shield\",\n//   Support: \"icon plus circle\",\n//   Medic: \"icon ambulance\",\n//   Witch: \"icon magic\",\n//   Captain: \"icon star\",\n// };\n\n// function BotCard({ bot, enlistedBots, enlistBot, releaseBot, deleteBot }) {\n//   const isEnlisted = enlistedBots.includes(bot);\n\n//   const handleCardClick = () => {\n//     if (!isEnlisted) {\n//       enlistBot(bot);\n//     } else {\n//       releaseBot(bot);\n//     }\n//   };\n\n//   const handleDeleteClick = (event) => {\n//     event.stopPropagation();\n//     deleteBot(bot.id);\n//   };\n\n//   return (\n//     <div className=\"ui column\">\n//       <div\n//         className={`ui card ${isEnlisted ? \"enlisted\" : \"\"}`}\n//         key={bot.id}\n//         onClick={handleCardClick}\n//       >\n//         <div className=\"image\">\n//           <img alt=\"oh no!\" src={bot.avatar_url} />\n//         </div>\n//         <div className=\"content\">\n//           <div className=\"header\">\n//             {bot.name}\n//             <i className={botTypeClasses[bot.bot_class]} />\n//           </div>\n//           <div className=\"meta text-wrap\">\n//             <small>{bot.catchphrase}</small>\n//           </div>\n//         </div>\n//         <div className=\"extra content\">\n//           <span>\n//             <i className=\"icon heartbeat\" />\n//             {bot.health}\n//           </span>\n//           <span>\n//             <i className=\"icon lightning\" />\n//             {bot.damage}\n//           </span>\n//           <span>\n//             <i className=\"icon shield\" />\n//             {bot.armor}\n//           </span>\n//           {isEnlisted ? (\n//             <span>\n//               <div className=\"ui center aligned segment basic\">\n//                 <button\n//                   className=\"ui mini red button\"\n//                   onClick={handleCardClick}\n//                 >\n//                   Release\n//                 </button>\n//               </div>\n//             </span>\n//           ) : (\n//             <span>\n//               <button\n//                 className=\"ui mini red button\"\n//                 onClick={handleDeleteClick}\n//               >\n//                 X\n//               </button>\n//             </span>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default BotCard;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCard(_ref) {\n  let {\n    bot,\n    enlisted,\n    enlistBot,\n    showBotSpecs\n  } = _ref;\n  const handleCardClick = () => {\n    showBotSpecs(bot);\n  };\n  const handleEnlistClick = () => {\n    enlistBot(bot);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"oh no!\",\n          src: bot.avatar_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: bot.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta text-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: bot.catchphrase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon heartbeat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), bot.health]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon lightning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), bot.damage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon shield\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), bot.armor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra content\",\n        children: enlisted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui center aligned segment basic\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui mini red button\",\n            onClick: handleEnlistClick,\n            children: \"Enlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui center aligned segment basic\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui mini green button\",\n            onClick: handleCardClick,\n            children: \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_c = BotCard;\nexport default B;\nvar _c;\n$RefreshReg$(_c, \"BotCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BotCard","_ref","bot","enlisted","enlistBot","showBotSpecs","handleCardClick","handleEnlistClick","className","children","alt","src","avatar_url","fileName","_jsxFileName","lineNumber","columnNumber","name","catchphrase","health","damage","armor","onClick","_c","B","$RefreshReg$"],"sources":["/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotCard.js"],"sourcesContent":["// import React from \"react\";\n\n// const botTypeClasses = {\n//   Assault: \"icon military\",\n//   Defender: \"icon shield\",\n//   Support: \"icon plus circle\",\n//   Medic: \"icon ambulance\",\n//   Witch: \"icon magic\",\n//   Captain: \"icon star\",\n// };\n\n// function BotCard({ bot, enlistedBots, enlistBot, releaseBot, deleteBot }) {\n//   const isEnlisted = enlistedBots.includes(bot);\n\n//   const handleCardClick = () => {\n//     if (!isEnlisted) {\n//       enlistBot(bot);\n//     } else {\n//       releaseBot(bot);\n//     }\n//   };\n\n//   const handleDeleteClick = (event) => {\n//     event.stopPropagation();\n//     deleteBot(bot.id);\n//   };\n\n//   return (\n//     <div className=\"ui column\">\n//       <div\n//         className={`ui card ${isEnlisted ? \"enlisted\" : \"\"}`}\n//         key={bot.id}\n//         onClick={handleCardClick}\n//       >\n//         <div className=\"image\">\n//           <img alt=\"oh no!\" src={bot.avatar_url} />\n//         </div>\n//         <div className=\"content\">\n//           <div className=\"header\">\n//             {bot.name}\n//             <i className={botTypeClasses[bot.bot_class]} />\n//           </div>\n//           <div className=\"meta text-wrap\">\n//             <small>{bot.catchphrase}</small>\n//           </div>\n//         </div>\n//         <div className=\"extra content\">\n//           <span>\n//             <i className=\"icon heartbeat\" />\n//             {bot.health}\n//           </span>\n//           <span>\n//             <i className=\"icon lightning\" />\n//             {bot.damage}\n//           </span>\n//           <span>\n//             <i className=\"icon shield\" />\n//             {bot.armor}\n//           </span>\n//           {isEnlisted ? (\n//             <span>\n//               <div className=\"ui center aligned segment basic\">\n//                 <button\n//                   className=\"ui mini red button\"\n//                   onClick={handleCardClick}\n//                 >\n//                   Release\n//                 </button>\n//               </div>\n//             </span>\n//           ) : (\n//             <span>\n//               <button\n//                 className=\"ui mini red button\"\n//                 onClick={handleDeleteClick}\n//               >\n//                 X\n//               </button>\n//             </span>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default BotCard;\n\n\n\nimport React, { useState } from \"react\";\n\nfunction BotCard({ bot, enlisted, enlistBot, showBotSpecs }) {\n  const handleCardClick = () => {\n    showBotSpecs(bot);\n  };\n\n  const handleEnlistClick = () => {\n    enlistBot(bot);\n  };\n\n  return (\n    <div className=\"column\">\n      <div className=\"ui card\">\n        <div className=\"image\">\n          <img alt=\"oh no!\" src={bot.avatar_url} />\n        </div>\n        <div className=\"content\">\n          <div className=\"header\">{bot.name}</div>\n          <div className=\"meta text-wrap\">\n            <small>{bot.catchphrase}</small>\n          </div>\n        </div>\n        <div className=\"extra content\">\n          <span>\n            <i className=\"icon heartbeat\" />\n            {bot.health}\n          </span>\n          <span>\n            <i className=\"icon lightning\" />\n            {bot.damage}\n          </span>\n          <span>\n            <i className=\"icon shield\" />\n            {bot.armor}\n          </span>\n        </div>\n        <div className=\"extra content\">\n          {enlisted ? (\n            <div className=\"ui center aligned segment basic\">\n              <button\n                className=\"ui mini red button\"\n                onClick={handleEnlistClick}\n              >\n                Enlist\n              </button>\n            </div>\n          ) : (\n            <div className=\"ui center aligned segment basic\">\n              <button\n                className=\"ui mini green button\"\n                onClick={handleCardClick}\n              >\n                Show\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default B"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}