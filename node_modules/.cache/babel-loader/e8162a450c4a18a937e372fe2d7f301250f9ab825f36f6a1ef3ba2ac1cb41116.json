{"ast":null,"code":"var _jsxFileName = \"/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import YourBotArmy from \"./YourBotArmy\";\n// import BotCollection from \"./BotCollection\";\n\n// function BotsPage() {\n//   const [bots, setBots] = useState([]);\n//   const [enlistedBots, setEnlistedBots] = useState([]);\n//   const url = \"http://localhost:8002/bots\";\n\n//   useEffect(() => {\n//     fetch(url)\n//       .then((response) => response.json())\n//       .then((data) => setBots(data))\n//       .catch((error) => console.log(error));\n//   }, []);\n\n//   const enlistBot = (selectedBot) => {\n//     if (enlistedBots.includes(selectedBot)) {\n//       return;\n//     }\n//     setEnlistedBots([...enlistedBots, selectedBot]);\n//   };\n\n//   const deleteBot = (botId) => {\n//     fetch(`${url}/${botId}`, { method: \"DELETE\" })\n//       .then((response) => {\n//         if (response.ok) {\n//           setBots(bots.filter((bot) => bot.id !== botId));\n//         } else {\n//           throw new Error(\"Failed to delete bot\");\n//         }\n//       })\n//       .catch((error) => console.log(error));\n//   };\n\n//   const releaseBot = (releasedBot) => {\n//     setEnlistedBots(\n//       enlistedBots.filter((enlistedBot) => enlistedBot !== releasedBot)\n//     );\n//   };\n\n//   return (\n//     <div>\n//       <YourBotArmy\n//         enlistedBots={enlistedBots}\n//         deleteBot={deleteBot}\n//         releaseBot={releaseBot}\n//       />\n//       <BotCollection\n//         bots={bots}\n//         enlistBot={enlistBot}\n//         deleteBot={deleteBot}\n//         enlistedBots={enlistedBots}\n//         releaseBot={releaseBot}\n//       />\n//     </div>\n//   );\n// }\n\n// export default BotsPage;\n\nimport React, { useState } from \"react\";\nimport BotCollection from \"./BotCollection\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotSpecs from \"./BotSpecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotPage() {\n  _s();\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const enlistBot = bot => {\n    if (!enlistedBots.includes(bot)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n  const releaseBot = bot => {\n    const updatedBots = enlistedBots.filter(b => b.id !== bot.id);\n    setEnlistedBots(updatedBots);\n  };\n  const handleCardClick = bot => {\n    setSelectedBot(bot);\n  };\n  const handleGoBack = () => {\n    setSelectedBot(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: selectedBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      goBackToList: handleGoBack,\n      enlistBot: enlistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui stackable two column grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(BotCollection, {\n          onCardClick: handleCardClick,\n          enlistedBots: enlistedBots,\n          deleteBot: deleteBot,\n          releaseBot: releaseBot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(YourBotArmy, {\n          enlistedBots: enlistedBots,\n          releaseBot: releaseBot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(BotPage, \"FfBX4KayuFkN9+tnJplbPYfGEn8=\");\n_c = BotPage;\nexport default BotPage;\nvar _c;\n$RefreshReg$(_c, \"BotPage\");","map":{"version":3,"names":["React","useState","BotCollection","YourBotArmy","BotSpecs","jsxDEV","_jsxDEV","BotPage","_s","enlistedBots","setEnlistedBots","selectedBot","setSelectedBot","enlistBot","bot","includes","releaseBot","updatedBots","filter","b","id","handleCardClick","handleGoBack","className","children","goBackToList","fileName","_jsxFileName","lineNumber","columnNumber","onCardClick","deleteBot","_c","$RefreshReg$"],"sources":["/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import YourBotArmy from \"./YourBotArmy\";\n// import BotCollection from \"./BotCollection\";\n\n// function BotsPage() {\n//   const [bots, setBots] = useState([]);\n//   const [enlistedBots, setEnlistedBots] = useState([]);\n//   const url = \"http://localhost:8002/bots\";\n\n//   useEffect(() => {\n//     fetch(url)\n//       .then((response) => response.json())\n//       .then((data) => setBots(data))\n//       .catch((error) => console.log(error));\n//   }, []);\n\n//   const enlistBot = (selectedBot) => {\n//     if (enlistedBots.includes(selectedBot)) {\n//       return;\n//     }\n//     setEnlistedBots([...enlistedBots, selectedBot]);\n//   };\n\n//   const deleteBot = (botId) => {\n//     fetch(`${url}/${botId}`, { method: \"DELETE\" })\n//       .then((response) => {\n//         if (response.ok) {\n//           setBots(bots.filter((bot) => bot.id !== botId));\n//         } else {\n//           throw new Error(\"Failed to delete bot\");\n//         }\n//       })\n//       .catch((error) => console.log(error));\n//   };\n\n//   const releaseBot = (releasedBot) => {\n//     setEnlistedBots(\n//       enlistedBots.filter((enlistedBot) => enlistedBot !== releasedBot)\n//     );\n//   };\n\n//   return (\n//     <div>\n//       <YourBotArmy\n//         enlistedBots={enlistedBots}\n//         deleteBot={deleteBot}\n//         releaseBot={releaseBot}\n//       />\n//       <BotCollection\n//         bots={bots}\n//         enlistBot={enlistBot}\n//         deleteBot={deleteBot}\n//         enlistedBots={enlistedBots}\n//         releaseBot={releaseBot}\n//       />\n//     </div>\n//   );\n// }\n\n// export default BotsPage;\n\n\nimport React, { useState } from \"react\";\nimport BotCollection from \"./BotCollection\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction BotPage() {\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n\n  const enlistBot = (bot) => {\n    if (!enlistedBots.includes(bot)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n\n  const releaseBot = (bot) => {\n    const updatedBots = enlistedBots.filter((b) => b.id !== bot.id);\n    setEnlistedBots(updatedBots);\n  };\n\n  const handleCardClick = (bot) => {\n    setSelectedBot(bot);\n  };\n\n  const handleGoBack = () => {\n    setSelectedBot(null);\n  };\n\n  return (\n    <div className=\"ui container\">\n      {selectedBot ? (\n        <BotSpecs\n          bot={selectedBot}\n          goBackToList={handleGoBack}\n          enlistBot={enlistBot}\n        />\n      ) : (\n        <div className=\"ui stackable two column grid\">\n          <div className=\"column\">\n            <BotCollection\n              onCardClick={handleCardClick}\n              enlistedBots={enlistedBots}\n              deleteBot={deleteBot}\n              releaseBot={releaseBot}\n            />\n          </div>\n          <div className=\"column\">\n            <YourBotArmy enlistedBots={enlistedBots} releaseBot={releaseBot} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default BotPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}