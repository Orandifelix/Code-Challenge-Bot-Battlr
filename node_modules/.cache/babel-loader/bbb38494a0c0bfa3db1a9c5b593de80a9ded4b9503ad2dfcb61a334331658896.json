{"ast":null,"code":"var _jsxFileName = \"/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  //start here with your code for step one\n\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const url = \"http://localhost:8002/bots\";\n  useEffect(() => {\n    // Fetching bots data from the backend\n    fetch(url).then(response => response.json()).then(data => setBots(data)).catch(error => console.log(error));\n  }, []);\n  const enlistBot = selectedBot => {\n    // Check if the bot is already enlisted\n    if (enlistedBots.includes(selectedBot)) {\n      return; // Exit if the bot is already enlisted\n    }\n    // Add the selectedBot to the enlistedBots state\n    setEnlistedBots([...enlistedBots, selectedBot]);\n  };\n  const releaseBot = releasedBot => {\n    setEnlistedBots(enlistedBots.filter(bot => bot.id !== releasedBot.id));\n  };\n  function deleteBot(botToDelete) {\n    fetch(`${botsUrl}/${botToDelete.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(response => response.json()).then(() => {\n      setBots(bots.filter(currentBot => currentBot.id !== botToDelete.id));\n      setBotsListed(botsListed.filter(botListed => botListed.id !== botToDelete.id));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      enlistedBots: enlistedBots,\n      releaseBot: releaseBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistBot: enlistBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","jsxDEV","_jsxDEV","BotsPage","_s","bots","setBots","enlistedBots","setEnlistedBots","url","fetch","then","response","json","data","catch","error","console","log","enlistBot","selectedBot","includes","releaseBot","releasedBot","filter","bot","id","deleteBot","botToDelete","botsUrl","method","headers","Accept","currentBot","setBotsListed","botsListed","botListed","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  //start here with your code for step one\n\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const url = \"http://localhost:8002/bots\";\n\n  useEffect(() => {\n    // Fetching bots data from the backend\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => setBots(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n\n  \n  const enlistBot = (selectedBot) => {\n    // Check if the bot is already enlisted\n    if (enlistedBots.includes(selectedBot)) {\n      return; // Exit if the bot is already enlisted\n    }\n    // Add the selectedBot to the enlistedBots state\n    setEnlistedBots([...enlistedBots, selectedBot]);\n  };\n\n  const releaseBot = (releasedBot) => {\n    setEnlistedBots(enlistedBots.filter((bot) => bot.id !== releasedBot.id));\n  };\n\n  function deleteBot(botToDelete) {\n    fetch(`${botsUrl}/${botToDelete.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then(() => {\n        setBots(bots.filter((currentBot) => currentBot.id !== botToDelete.id));\n        setBotsListed(\n          botsListed.filter((botListed) => botListed.id !== botToDelete.id)\n        );\n      });\n  }\n\n  return (\n    <div>\n      <YourBotArmy enlistedBots={enlistedBots} releaseBot={releaseBot} />\n      <BotCollection bots={bots} enlistBot={enlistBot} />\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMY,GAAG,GAAG,4BAA4B;EAExCX,SAAS,CAAC,MAAM;IACd;IACAY,KAAK,CAACD,GAAG,CAAC,CACPE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKR,OAAO,CAACQ,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMG,SAAS,GAAIC,WAAW,IAAK;IACjC;IACA,IAAIb,YAAY,CAACc,QAAQ,CAACD,WAAW,CAAC,EAAE;MACtC,OAAO,CAAC;IACV;IACA;IACAZ,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEa,WAAW,CAAC,CAAC;EACjD,CAAC;EAED,MAAME,UAAU,GAAIC,WAAW,IAAK;IAClCf,eAAe,CAACD,YAAY,CAACiB,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKH,WAAW,CAACG,EAAE,CAAC,CAAC;EAC1E,CAAC;EAED,SAASC,SAASA,CAACC,WAAW,EAAE;IAC9BlB,KAAK,CAAE,GAAEmB,OAAQ,IAAGD,WAAW,CAACF,EAAG,EAAC,EAAE;MACpCI,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE;MACV;IACF,CAAC,CAAC,CACCrB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAC,MAAM;MACVL,OAAO,CAACD,IAAI,CAACmB,MAAM,CAAES,UAAU,IAAKA,UAAU,CAACP,EAAE,KAAKE,WAAW,CAACF,EAAE,CAAC,CAAC;MACtEQ,aAAa,CACXC,UAAU,CAACX,MAAM,CAAEY,SAAS,IAAKA,SAAS,CAACV,EAAE,KAAKE,WAAW,CAACF,EAAE,CAClE,CAAC;IACH,CAAC,CAAC;EACN;EAEA,oBACExB,OAAA;IAAAmC,QAAA,gBACEnC,OAAA,CAACH,WAAW;MAACQ,YAAY,EAAEA,YAAa;MAACe,UAAU,EAAEA;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEvC,OAAA,CAACF,aAAa;MAACK,IAAI,EAAEA,IAAK;MAACc,SAAS,EAAEA;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACrC,EAAA,CArDQD,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AAuDjB,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}