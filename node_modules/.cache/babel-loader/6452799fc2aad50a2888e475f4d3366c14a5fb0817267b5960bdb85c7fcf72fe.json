{"ast":null,"code":"var _jsxFileName = \"/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  //start here with your code for step one\n\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const url = \"http://localhost:8002/bots\";\n  useEffect(() => {\n    // Fetching bots data from the backend\n    fetch(url).then(response => response.json()).then(data => setBots(data)).catch(error => console.log(error));\n  }, []);\n  const enlistBot = selectedBot => {\n    // Check if the bot is already enlisted\n    if (enlistedBots.includes(selectedBot)) {\n      return; // Exit if the bot is already enlisted\n    }\n    // Add the selectedBot to the enlistedBots state\n    setEnlistedBots([...enlistedBots, selectedBot]);\n  };\n  const deleteBot = botId => {\n    // Send DELETE request to the server\n    fetch(`${url}/${botId}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (response.ok) {\n        // Remove the deleted bot from the bots state\n        setBots(bots.filter(bot => bot.id !== botId));\n      } else {\n        throw new Error(\"Failed to delete bot\");\n      }\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      enlistedBots: enlistedBots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistBot: enlistBot,\n      deleteBot: deleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","jsxDEV","_jsxDEV","BotsPage","_s","bots","setBots","enlistedBots","setEnlistedBots","url","fetch","then","response","json","data","catch","error","console","log","enlistBot","selectedBot","includes","deleteBot","botId","method","ok","filter","bot","id","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  //start here with your code for step one\n\n    const [bots, setBots] = useState([]);\n    const [enlistedBots, setEnlistedBots] = useState([]);\n    const url = \"http://localhost:8002/bots\";\n\n    useEffect(() => {\n      // Fetching bots data from the backend\n      fetch(url)\n        .then((response) => response.json())\n        .then((data) => setBots(data))\n        .catch((error) => console.log(error));\n    }, []);\n\n    const enlistBot = (selectedBot) => {\n      // Check if the bot is already enlisted\n      if (enlistedBots.includes(selectedBot)) {\n        return; // Exit if the bot is already enlisted\n      }\n      // Add the selectedBot to the enlistedBots state\n      setEnlistedBots([...enlistedBots, selectedBot]);\n    };\n\nconst deleteBot = (botId) => {\n  // Send DELETE request to the server\n  fetch(`${url}/${botId}`, { method: \"DELETE\" })\n    .then((response) => {\n      if (response.ok) {\n        // Remove the deleted bot from the bots state\n        setBots(bots.filter((bot) => bot.id !== botId));\n      } else {\n        throw new Error(\"Failed to delete bot\");\n      }\n    })\n    .catch((error) => console.log(error));\n};\n\n\n  return (\n    <div>\n      <YourBotArmy enlistedBots={enlistedBots} />\n      <BotCollection bots={bots} enlistBot={enlistBot} deleteBot={deleteBot} />\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;;EAEE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMY,GAAG,GAAG,4BAA4B;EAExCX,SAAS,CAAC,MAAM;IACd;IACAY,KAAK,CAACD,GAAG,CAAC,CACPE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKR,OAAO,CAACQ,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,SAAS,GAAIC,WAAW,IAAK;IACjC;IACA,IAAIb,YAAY,CAACc,QAAQ,CAACD,WAAW,CAAC,EAAE;MACtC,OAAO,CAAC;IACV;IACA;IACAZ,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEa,WAAW,CAAC,CAAC;EACjD,CAAC;EAEL,MAAME,SAAS,GAAIC,KAAK,IAAK;IAC3B;IACAb,KAAK,CAAE,GAAED,GAAI,IAAGc,KAAM,EAAC,EAAE;MAAEC,MAAM,EAAE;IAAS,CAAC,CAAC,CAC3Cb,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACa,EAAE,EAAE;QACf;QACAnB,OAAO,CAACD,IAAI,CAACqB,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKL,KAAK,CAAC,CAAC;MACjD,CAAC,MAAM;QACL,MAAM,IAAIM,KAAK,CAAC,sBAAsB,CAAC;MACzC;IACF,CAAC,CAAC,CACDd,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC;EAGC,oBACEd,OAAA;IAAA4B,QAAA,gBACE5B,OAAA,CAACH,WAAW;MAACQ,YAAY,EAAEA;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3ChC,OAAA,CAACF,aAAa;MAACK,IAAI,EAAEA,IAAK;MAACc,SAAS,EAAEA,SAAU;MAACG,SAAS,EAAEA;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV;AAAC9B,EAAA,CA7CQD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA+CjB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}