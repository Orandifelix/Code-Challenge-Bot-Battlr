{"ast":null,"code":"var _jsxFileName = \"/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const url = \"http://localhost:8002/bots\";\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => setBots(data)).catch(error => console.log(error));\n  }, []);\n  const enlistBot = selectedBot => {\n    if (enlistedBots.includes(selectedBot)) {\n      return;\n    }\n    setEnlistedBots([...enlistedBots, selectedBot]);\n  };\n  const deleteBot = botId => {\n    fetch(`${url}/${botId}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (response.ok) {\n        setBots(bots.filter(bot => bot.id !== botId));\n      } else {\n        throw new Error(\"Failed to delete bot\");\n      }\n    }).catch(error => console.log(error));\n  };\n  const releaseBot = releasedBot => {\n    setEnlistedBots(enlistedBots.filter(enlistedBot => enlistedBot !== releasedBot));\n  };\n\n  // sorting\n  //Get bots of the same class\n  function getBotsOfSameClass(bot) {\n    return en.find(enlistedBots => enlistBot.bot_class === bot.bot_class);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      enlistedBots: enlistedBots,\n      deleteBot: deleteBot,\n      releaseBot: releaseBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistBot: enlistBot,\n      deleteBot: deleteBot,\n      enlistedBots: enlistedBots,\n      releaseBot: releaseBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","jsxDEV","_jsxDEV","BotsPage","_s","bots","setBots","enlistedBots","setEnlistedBots","url","fetch","then","response","json","data","catch","error","console","log","enlistBot","selectedBot","includes","deleteBot","botId","method","ok","filter","bot","id","Error","releaseBot","releasedBot","enlistedBot","getBotsOfSameClass","en","find","bot_class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/orandi/Development/Code/Phase2/Phase-2-Hooks-Code-Challenge-Bot-Battlr-100421/code-challenge/src/components/BotsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const url = \"http://localhost:8002/bots\";\n\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => setBots(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  const enlistBot = (selectedBot) => {\n    if (enlistedBots.includes(selectedBot)) {\n      return;\n    }\n    setEnlistedBots([...enlistedBots, selectedBot]);\n  };\n\n  const deleteBot = (botId) => {\n    fetch(`${url}/${botId}`, { method: \"DELETE\" })\n      .then((response) => {\n        if (response.ok) {\n          setBots(bots.filter((bot) => bot.id !== botId));\n        } else {\n          throw new Error(\"Failed to delete bot\");\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const releaseBot = (releasedBot) => {\n    setEnlistedBots(\n      enlistedBots.filter((enlistedBot) => enlistedBot !== releasedBot)\n    );\n  };\n\n  // sorting\n  //Get bots of the same class\n  function getBotsOfSameClass(bot) {\n    return en.find(\n      (enlistedBots) => enlistBot.bot_class === bot.bot_class\n    );\n  }\n\n  return (\n    <div>\n      <YourBotArmy\n        enlistedBots={enlistedBots}\n        deleteBot={deleteBot}\n        releaseBot={releaseBot}\n      />\n      <BotCollection\n        bots={bots}\n        enlistBot={enlistBot}\n        deleteBot={deleteBot}\n        enlistedBots={enlistedBots}\n        releaseBot={releaseBot}\n      />\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMY,GAAG,GAAG,4BAA4B;EAExCX,SAAS,CAAC,MAAM;IACdY,KAAK,CAACD,GAAG,CAAC,CACPE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKR,OAAO,CAACQ,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,SAAS,GAAIC,WAAW,IAAK;IACjC,IAAIb,YAAY,CAACc,QAAQ,CAACD,WAAW,CAAC,EAAE;MACtC;IACF;IACAZ,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEa,WAAW,CAAC,CAAC;EACjD,CAAC;EAED,MAAME,SAAS,GAAIC,KAAK,IAAK;IAC3Bb,KAAK,CAAE,GAAED,GAAI,IAAGc,KAAM,EAAC,EAAE;MAAEC,MAAM,EAAE;IAAS,CAAC,CAAC,CAC3Cb,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACa,EAAE,EAAE;QACfnB,OAAO,CAACD,IAAI,CAACqB,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKL,KAAK,CAAC,CAAC;MACjD,CAAC,MAAM;QACL,MAAM,IAAIM,KAAK,CAAC,sBAAsB,CAAC;MACzC;IACF,CAAC,CAAC,CACDd,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,MAAMc,UAAU,GAAIC,WAAW,IAAK;IAClCvB,eAAe,CACbD,YAAY,CAACmB,MAAM,CAAEM,WAAW,IAAKA,WAAW,KAAKD,WAAW,CAClE,CAAC;EACH,CAAC;;EAED;EACA;EACA,SAASE,kBAAkBA,CAACN,GAAG,EAAE;IAC/B,OAAOO,EAAE,CAACC,IAAI,CACX5B,YAAY,IAAKY,SAAS,CAACiB,SAAS,KAAKT,GAAG,CAACS,SAChD,CAAC;EACH;EAEA,oBACElC,OAAA;IAAAmC,QAAA,gBACEnC,OAAA,CAACH,WAAW;MACVQ,YAAY,EAAEA,YAAa;MAC3Be,SAAS,EAAEA,SAAU;MACrBQ,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFvC,OAAA,CAACF,aAAa;MACZK,IAAI,EAAEA,IAAK;MACXc,SAAS,EAAEA,SAAU;MACrBG,SAAS,EAAEA,SAAU;MACrBf,YAAY,EAAEA,YAAa;MAC3BuB,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrC,EAAA,CA7DQD,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AA+DjB,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}